// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"

	"github.com/go-faster/errors"

	ht "github.com/ogen-go/ogen/http"
)

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// CartGetInternalServerError is response for CartGet operation.
type CartGetInternalServerError struct{}

func (*CartGetInternalServerError) cartGetRes() {}

// CartGetNotFound is response for CartGet operation.
type CartGetNotFound struct{}

func (*CartGetNotFound) cartGetRes() {}

type CartGetOKApplicationJSON []CartItem

func (*CartGetOKApplicationJSON) cartGetRes() {}

// Ref: #/components/schemas/CartItem
type CartItem struct {
	// Unique ID for the item in the cart.
	CartItemId OptString `json:"cartItemId"`
	ProductId  OptString `json:"productId"`
	Quantity   OptInt    `json:"quantity"`
	UserId     OptString `json:"userId"`
}

// GetCartItemId returns the value of CartItemId.
func (s *CartItem) GetCartItemId() OptString {
	return s.CartItemId
}

// GetProductId returns the value of ProductId.
func (s *CartItem) GetProductId() OptString {
	return s.ProductId
}

// GetQuantity returns the value of Quantity.
func (s *CartItem) GetQuantity() OptInt {
	return s.Quantity
}

// GetUserId returns the value of UserId.
func (s *CartItem) GetUserId() OptString {
	return s.UserId
}

// SetCartItemId sets the value of CartItemId.
func (s *CartItem) SetCartItemId(val OptString) {
	s.CartItemId = val
}

// SetProductId sets the value of ProductId.
func (s *CartItem) SetProductId(val OptString) {
	s.ProductId = val
}

// SetQuantity sets the value of Quantity.
func (s *CartItem) SetQuantity(val OptInt) {
	s.Quantity = val
}

// SetUserId sets the value of UserId.
func (s *CartItem) SetUserId(val OptString) {
	s.UserId = val
}

// Ref: #/components/schemas/CartItemCreate
type CartItemCreate struct {
	ProductId string    `json:"productId"`
	UserId    OptString `json:"userId"`
	Quantity  int       `json:"quantity"`
}

// GetProductId returns the value of ProductId.
func (s *CartItemCreate) GetProductId() string {
	return s.ProductId
}

// GetUserId returns the value of UserId.
func (s *CartItemCreate) GetUserId() OptString {
	return s.UserId
}

// GetQuantity returns the value of Quantity.
func (s *CartItemCreate) GetQuantity() int {
	return s.Quantity
}

// SetProductId sets the value of ProductId.
func (s *CartItemCreate) SetProductId(val string) {
	s.ProductId = val
}

// SetUserId sets the value of UserId.
func (s *CartItemCreate) SetUserId(val OptString) {
	s.UserId = val
}

// SetQuantity sets the value of Quantity.
func (s *CartItemCreate) SetQuantity(val int) {
	s.Quantity = val
}

// CartPostBadRequest is response for CartPost operation.
type CartPostBadRequest struct{}

func (*CartPostBadRequest) cartPostRes() {}

// CartPostCreated is response for CartPost operation.
type CartPostCreated struct{}

func (*CartPostCreated) cartPostRes() {}

// CartPostInternalServerError is response for CartPost operation.
type CartPostInternalServerError struct{}

func (*CartPostInternalServerError) cartPostRes() {}

// CartProductIdDeleteInternalServerError is response for CartProductIdDelete operation.
type CartProductIdDeleteInternalServerError struct{}

func (*CartProductIdDeleteInternalServerError) cartProductIdDeleteRes() {}

// CartProductIdDeleteNoContent is response for CartProductIdDelete operation.
type CartProductIdDeleteNoContent struct{}

func (*CartProductIdDeleteNoContent) cartProductIdDeleteRes() {}

// CartProductIdDeleteNotFound is response for CartProductIdDelete operation.
type CartProductIdDeleteNotFound struct{}

func (*CartProductIdDeleteNotFound) cartProductIdDeleteRes() {}

// CartProductIdPutInternalServerError is response for CartProductIdPut operation.
type CartProductIdPutInternalServerError struct{}

func (*CartProductIdPutInternalServerError) cartProductIdPutRes() {}

// CartProductIdPutNotFound is response for CartProductIdPut operation.
type CartProductIdPutNotFound struct{}

func (*CartProductIdPutNotFound) cartProductIdPutRes() {}

// CartProductIdPutOK is response for CartProductIdPut operation.
type CartProductIdPutOK struct{}

func (*CartProductIdPutOK) cartProductIdPutRes() {}

type CartProductIdPutReq struct {
	Quantity OptInt `json:"quantity"`
}

// GetQuantity returns the value of Quantity.
func (s *CartProductIdPutReq) GetQuantity() OptInt {
	return s.Quantity
}

// SetQuantity sets the value of Quantity.
func (s *CartProductIdPutReq) SetQuantity(val OptInt) {
	s.Quantity = val
}

// CategoriesCategoryIdDeleteNoContent is response for CategoriesCategoryIdDelete operation.
type CategoriesCategoryIdDeleteNoContent struct{}

// CategoriesCategoryIdPutOK is response for CategoriesCategoryIdPut operation.
type CategoriesCategoryIdPutOK struct{}

// CategoriesPostCreated is response for CategoriesPost operation.
type CategoriesPostCreated struct{}

// Ref: #/components/schemas/Category
type Category struct {
	ID   OptString `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *Category) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *Category) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Category) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Category) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/CategoryCreate
type CategoryCreate struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *CategoryCreate) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *CategoryCreate) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/CategoryUpdate
type CategoryUpdate struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *CategoryUpdate) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *CategoryUpdate) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/DeliveryChoice
type DeliveryChoice struct {
	OrderId        OptString                       `json:"orderId"`
	DeliveryMethod OptDeliveryChoiceDeliveryMethod `json:"deliveryMethod"`
	Address        OptString                       `json:"address"`
}

// GetOrderId returns the value of OrderId.
func (s *DeliveryChoice) GetOrderId() OptString {
	return s.OrderId
}

// GetDeliveryMethod returns the value of DeliveryMethod.
func (s *DeliveryChoice) GetDeliveryMethod() OptDeliveryChoiceDeliveryMethod {
	return s.DeliveryMethod
}

// GetAddress returns the value of Address.
func (s *DeliveryChoice) GetAddress() OptString {
	return s.Address
}

// SetOrderId sets the value of OrderId.
func (s *DeliveryChoice) SetOrderId(val OptString) {
	s.OrderId = val
}

// SetDeliveryMethod sets the value of DeliveryMethod.
func (s *DeliveryChoice) SetDeliveryMethod(val OptDeliveryChoiceDeliveryMethod) {
	s.DeliveryMethod = val
}

// SetAddress sets the value of Address.
func (s *DeliveryChoice) SetAddress(val OptString) {
	s.Address = val
}

type DeliveryChoiceDeliveryMethod string

const (
	DeliveryChoiceDeliveryMethodCourier DeliveryChoiceDeliveryMethod = "Courier"
	DeliveryChoiceDeliveryMethodPickUp  DeliveryChoiceDeliveryMethod = "Pick-up"
)

// AllValues returns all DeliveryChoiceDeliveryMethod values.
func (DeliveryChoiceDeliveryMethod) AllValues() []DeliveryChoiceDeliveryMethod {
	return []DeliveryChoiceDeliveryMethod{
		DeliveryChoiceDeliveryMethodCourier,
		DeliveryChoiceDeliveryMethodPickUp,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DeliveryChoiceDeliveryMethod) MarshalText() ([]byte, error) {
	switch s {
	case DeliveryChoiceDeliveryMethodCourier:
		return []byte(s), nil
	case DeliveryChoiceDeliveryMethodPickUp:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DeliveryChoiceDeliveryMethod) UnmarshalText(data []byte) error {
	switch DeliveryChoiceDeliveryMethod(data) {
	case DeliveryChoiceDeliveryMethodCourier:
		*s = DeliveryChoiceDeliveryMethodCourier
		return nil
	case DeliveryChoiceDeliveryMethodPickUp:
		*s = DeliveryChoiceDeliveryMethodPickUp
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// DeliveryGetInternalServerError is response for DeliveryGet operation.
type DeliveryGetInternalServerError struct{}

func (*DeliveryGetInternalServerError) deliveryGetRes() {}

// DeliveryGetUnauthorized is response for DeliveryGet operation.
type DeliveryGetUnauthorized struct{}

func (*DeliveryGetUnauthorized) deliveryGetRes() {}

// DeliveryPostCreated is response for DeliveryPost operation.
type DeliveryPostCreated struct{}

func (*DeliveryPostCreated) deliveryPostRes() {}

// DeliveryPostInternalServerError is response for DeliveryPost operation.
type DeliveryPostInternalServerError struct{}

func (*DeliveryPostInternalServerError) deliveryPostRes() {}

// DeliveryPostUnauthorized is response for DeliveryPost operation.
type DeliveryPostUnauthorized struct{}

func (*DeliveryPostUnauthorized) deliveryPostRes() {}

// Ref: #/components/schemas/DeliveryStatus
type DeliveryStatus struct {
	OrderId               OptString `json:"orderId"`
	Status                OptString `json:"status"`
	EstimatedDeliveryTime OptString `json:"estimatedDeliveryTime"`
}

// GetOrderId returns the value of OrderId.
func (s *DeliveryStatus) GetOrderId() OptString {
	return s.OrderId
}

// GetStatus returns the value of Status.
func (s *DeliveryStatus) GetStatus() OptString {
	return s.Status
}

// GetEstimatedDeliveryTime returns the value of EstimatedDeliveryTime.
func (s *DeliveryStatus) GetEstimatedDeliveryTime() OptString {
	return s.EstimatedDeliveryTime
}

// SetOrderId sets the value of OrderId.
func (s *DeliveryStatus) SetOrderId(val OptString) {
	s.OrderId = val
}

// SetStatus sets the value of Status.
func (s *DeliveryStatus) SetStatus(val OptString) {
	s.Status = val
}

// SetEstimatedDeliveryTime sets the value of EstimatedDeliveryTime.
func (s *DeliveryStatus) SetEstimatedDeliveryTime(val OptString) {
	s.EstimatedDeliveryTime = val
}

func (*DeliveryStatus) deliveryGetRes() {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeliveryChoiceDeliveryMethod returns new OptDeliveryChoiceDeliveryMethod with value set to v.
func NewOptDeliveryChoiceDeliveryMethod(v DeliveryChoiceDeliveryMethod) OptDeliveryChoiceDeliveryMethod {
	return OptDeliveryChoiceDeliveryMethod{
		Value: v,
		Set:   true,
	}
}

// OptDeliveryChoiceDeliveryMethod is optional DeliveryChoiceDeliveryMethod.
type OptDeliveryChoiceDeliveryMethod struct {
	Value DeliveryChoiceDeliveryMethod
	Set   bool
}

// IsSet returns true if OptDeliveryChoiceDeliveryMethod was set.
func (o OptDeliveryChoiceDeliveryMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeliveryChoiceDeliveryMethod) Reset() {
	var v DeliveryChoiceDeliveryMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeliveryChoiceDeliveryMethod) SetTo(v DeliveryChoiceDeliveryMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeliveryChoiceDeliveryMethod) Get() (v DeliveryChoiceDeliveryMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeliveryChoiceDeliveryMethod) Or(d DeliveryChoiceDeliveryMethod) DeliveryChoiceDeliveryMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMultipartFile returns new OptMultipartFile with value set to v.
func NewOptMultipartFile(v ht.MultipartFile) OptMultipartFile {
	return OptMultipartFile{
		Value: v,
		Set:   true,
	}
}

// OptMultipartFile is optional ht.MultipartFile.
type OptMultipartFile struct {
	Value ht.MultipartFile
	Set   bool
}

// IsSet returns true if OptMultipartFile was set.
func (o OptMultipartFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMultipartFile) Reset() {
	var v ht.MultipartFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMultipartFile) SetTo(v ht.MultipartFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMultipartFile) Get() (v ht.MultipartFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMultipartFile) Or(d ht.MultipartFile) ht.MultipartFile {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrderDetailsStatus returns new OptOrderDetailsStatus with value set to v.
func NewOptOrderDetailsStatus(v OrderDetailsStatus) OptOrderDetailsStatus {
	return OptOrderDetailsStatus{
		Value: v,
		Set:   true,
	}
}

// OptOrderDetailsStatus is optional OrderDetailsStatus.
type OptOrderDetailsStatus struct {
	Value OrderDetailsStatus
	Set   bool
}

// IsSet returns true if OptOrderDetailsStatus was set.
func (o OptOrderDetailsStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderDetailsStatus) Reset() {
	var v OrderDetailsStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderDetailsStatus) SetTo(v OrderDetailsStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderDetailsStatus) Get() (v OrderDetailsStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrderDetailsStatus) Or(d OrderDetailsStatus) OrderDetailsStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentDetailsStatus returns new OptPaymentDetailsStatus with value set to v.
func NewOptPaymentDetailsStatus(v PaymentDetailsStatus) OptPaymentDetailsStatus {
	return OptPaymentDetailsStatus{
		Value: v,
		Set:   true,
	}
}

// OptPaymentDetailsStatus is optional PaymentDetailsStatus.
type OptPaymentDetailsStatus struct {
	Value PaymentDetailsStatus
	Set   bool
}

// IsSet returns true if OptPaymentDetailsStatus was set.
func (o OptPaymentDetailsStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentDetailsStatus) Reset() {
	var v PaymentDetailsStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentDetailsStatus) SetTo(v PaymentDetailsStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentDetailsStatus) Get() (v PaymentDetailsStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentDetailsStatus) Or(d PaymentDetailsStatus) PaymentDetailsStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPaymentInitiatePaymentMethod returns new OptPaymentInitiatePaymentMethod with value set to v.
func NewOptPaymentInitiatePaymentMethod(v PaymentInitiatePaymentMethod) OptPaymentInitiatePaymentMethod {
	return OptPaymentInitiatePaymentMethod{
		Value: v,
		Set:   true,
	}
}

// OptPaymentInitiatePaymentMethod is optional PaymentInitiatePaymentMethod.
type OptPaymentInitiatePaymentMethod struct {
	Value PaymentInitiatePaymentMethod
	Set   bool
}

// IsSet returns true if OptPaymentInitiatePaymentMethod was set.
func (o OptPaymentInitiatePaymentMethod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPaymentInitiatePaymentMethod) Reset() {
	var v PaymentInitiatePaymentMethod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPaymentInitiatePaymentMethod) SetTo(v PaymentInitiatePaymentMethod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPaymentInitiatePaymentMethod) Get() (v PaymentInitiatePaymentMethod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPaymentInitiatePaymentMethod) Or(d PaymentInitiatePaymentMethod) PaymentInitiatePaymentMethod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptProductsGetSortBy returns new OptProductsGetSortBy with value set to v.
func NewOptProductsGetSortBy(v ProductsGetSortBy) OptProductsGetSortBy {
	return OptProductsGetSortBy{
		Value: v,
		Set:   true,
	}
}

// OptProductsGetSortBy is optional ProductsGetSortBy.
type OptProductsGetSortBy struct {
	Value ProductsGetSortBy
	Set   bool
}

// IsSet returns true if OptProductsGetSortBy was set.
func (o OptProductsGetSortBy) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProductsGetSortBy) Reset() {
	var v ProductsGetSortBy
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProductsGetSortBy) SetTo(v ProductsGetSortBy) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProductsGetSortBy) Get() (v ProductsGetSortBy, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptProductsGetSortBy) Or(d ProductsGetSortBy) ProductsGetSortBy {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/OrderCreate
type OrderCreate struct {
	Items    []OrderItem `json:"items"`
	Address  OptString   `json:"address"`
	Phone    OptString   `json:"phone"`
	Comments OptString   `json:"comments"`
}

// GetItems returns the value of Items.
func (s *OrderCreate) GetItems() []OrderItem {
	return s.Items
}

// GetAddress returns the value of Address.
func (s *OrderCreate) GetAddress() OptString {
	return s.Address
}

// GetPhone returns the value of Phone.
func (s *OrderCreate) GetPhone() OptString {
	return s.Phone
}

// GetComments returns the value of Comments.
func (s *OrderCreate) GetComments() OptString {
	return s.Comments
}

// SetItems sets the value of Items.
func (s *OrderCreate) SetItems(val []OrderItem) {
	s.Items = val
}

// SetAddress sets the value of Address.
func (s *OrderCreate) SetAddress(val OptString) {
	s.Address = val
}

// SetPhone sets the value of Phone.
func (s *OrderCreate) SetPhone(val OptString) {
	s.Phone = val
}

// SetComments sets the value of Comments.
func (s *OrderCreate) SetComments(val OptString) {
	s.Comments = val
}

// Ref: #/components/schemas/OrderDetails
type OrderDetails struct {
	ID       OptString             `json:"id"`
	Items    []OrderItem           `json:"items"`
	Status   OptOrderDetailsStatus `json:"status"`
	Address  OptString             `json:"address"`
	Phone    OptString             `json:"phone"`
	Comments OptString             `json:"comments"`
}

// GetID returns the value of ID.
func (s *OrderDetails) GetID() OptString {
	return s.ID
}

// GetItems returns the value of Items.
func (s *OrderDetails) GetItems() []OrderItem {
	return s.Items
}

// GetStatus returns the value of Status.
func (s *OrderDetails) GetStatus() OptOrderDetailsStatus {
	return s.Status
}

// GetAddress returns the value of Address.
func (s *OrderDetails) GetAddress() OptString {
	return s.Address
}

// GetPhone returns the value of Phone.
func (s *OrderDetails) GetPhone() OptString {
	return s.Phone
}

// GetComments returns the value of Comments.
func (s *OrderDetails) GetComments() OptString {
	return s.Comments
}

// SetID sets the value of ID.
func (s *OrderDetails) SetID(val OptString) {
	s.ID = val
}

// SetItems sets the value of Items.
func (s *OrderDetails) SetItems(val []OrderItem) {
	s.Items = val
}

// SetStatus sets the value of Status.
func (s *OrderDetails) SetStatus(val OptOrderDetailsStatus) {
	s.Status = val
}

// SetAddress sets the value of Address.
func (s *OrderDetails) SetAddress(val OptString) {
	s.Address = val
}

// SetPhone sets the value of Phone.
func (s *OrderDetails) SetPhone(val OptString) {
	s.Phone = val
}

// SetComments sets the value of Comments.
func (s *OrderDetails) SetComments(val OptString) {
	s.Comments = val
}

func (*OrderDetails) ordersOrderIdGetRes() {}
func (*OrderDetails) ordersPostRes()       {}

type OrderDetailsStatus string

const (
	OrderDetailsStatus_0 OrderDetailsStatus = "в обработке"
	OrderDetailsStatus_1 OrderDetailsStatus = "готовится"
	OrderDetailsStatus_2 OrderDetailsStatus = "в пути"
	OrderDetailsStatus_3 OrderDetailsStatus = "доставлено"
)

// AllValues returns all OrderDetailsStatus values.
func (OrderDetailsStatus) AllValues() []OrderDetailsStatus {
	return []OrderDetailsStatus{
		OrderDetailsStatus_0,
		OrderDetailsStatus_1,
		OrderDetailsStatus_2,
		OrderDetailsStatus_3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s OrderDetailsStatus) MarshalText() ([]byte, error) {
	switch s {
	case OrderDetailsStatus_0:
		return []byte(s), nil
	case OrderDetailsStatus_1:
		return []byte(s), nil
	case OrderDetailsStatus_2:
		return []byte(s), nil
	case OrderDetailsStatus_3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *OrderDetailsStatus) UnmarshalText(data []byte) error {
	switch OrderDetailsStatus(data) {
	case OrderDetailsStatus_0:
		*s = OrderDetailsStatus_0
		return nil
	case OrderDetailsStatus_1:
		*s = OrderDetailsStatus_1
		return nil
	case OrderDetailsStatus_2:
		*s = OrderDetailsStatus_2
		return nil
	case OrderDetailsStatus_3:
		*s = OrderDetailsStatus_3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/OrderItem
type OrderItem struct {
	// Unique ID for the item in the order.
	OrderItemId OptString  `json:"orderItemId"`
	ProductId   OptString  `json:"productId"`
	Quantity    OptInt     `json:"quantity"`
	Price       OptFloat64 `json:"price"`
	Total       OptFloat64 `json:"total"`
}

// GetOrderItemId returns the value of OrderItemId.
func (s *OrderItem) GetOrderItemId() OptString {
	return s.OrderItemId
}

// GetProductId returns the value of ProductId.
func (s *OrderItem) GetProductId() OptString {
	return s.ProductId
}

// GetQuantity returns the value of Quantity.
func (s *OrderItem) GetQuantity() OptInt {
	return s.Quantity
}

// GetPrice returns the value of Price.
func (s *OrderItem) GetPrice() OptFloat64 {
	return s.Price
}

// GetTotal returns the value of Total.
func (s *OrderItem) GetTotal() OptFloat64 {
	return s.Total
}

// SetOrderItemId sets the value of OrderItemId.
func (s *OrderItem) SetOrderItemId(val OptString) {
	s.OrderItemId = val
}

// SetProductId sets the value of ProductId.
func (s *OrderItem) SetProductId(val OptString) {
	s.ProductId = val
}

// SetQuantity sets the value of Quantity.
func (s *OrderItem) SetQuantity(val OptInt) {
	s.Quantity = val
}

// SetPrice sets the value of Price.
func (s *OrderItem) SetPrice(val OptFloat64) {
	s.Price = val
}

// SetTotal sets the value of Total.
func (s *OrderItem) SetTotal(val OptFloat64) {
	s.Total = val
}

// OrdersGetInternalServerError is response for OrdersGet operation.
type OrdersGetInternalServerError struct{}

func (*OrdersGetInternalServerError) ordersGetRes() {}

type OrdersGetOKApplicationJSON []OrderDetails

func (*OrdersGetOKApplicationJSON) ordersGetRes() {}

// OrdersGetUnauthorized is response for OrdersGet operation.
type OrdersGetUnauthorized struct{}

func (*OrdersGetUnauthorized) ordersGetRes() {}

// OrdersOrderIdGetInternalServerError is response for OrdersOrderIdGet operation.
type OrdersOrderIdGetInternalServerError struct{}

func (*OrdersOrderIdGetInternalServerError) ordersOrderIdGetRes() {}

// OrdersOrderIdGetNotFound is response for OrdersOrderIdGet operation.
type OrdersOrderIdGetNotFound struct{}

func (*OrdersOrderIdGetNotFound) ordersOrderIdGetRes() {}

// OrdersOrderIdGetUnauthorized is response for OrdersOrderIdGet operation.
type OrdersOrderIdGetUnauthorized struct{}

func (*OrdersOrderIdGetUnauthorized) ordersOrderIdGetRes() {}

// OrdersPostInternalServerError is response for OrdersPost operation.
type OrdersPostInternalServerError struct{}

func (*OrdersPostInternalServerError) ordersPostRes() {}

// OrdersPostUnauthorized is response for OrdersPost operation.
type OrdersPostUnauthorized struct{}

func (*OrdersPostUnauthorized) ordersPostRes() {}

// Ref: #/components/schemas/PaymentDetails
type PaymentDetails struct {
	PaymentId     OptString `json:"paymentId"`
	OrderId       OptString `json:"orderId"`
	PaymentMethod OptString `json:"paymentMethod"`
	// Status of the payment.
	Status OptPaymentDetailsStatus `json:"status"`
}

// GetPaymentId returns the value of PaymentId.
func (s *PaymentDetails) GetPaymentId() OptString {
	return s.PaymentId
}

// GetOrderId returns the value of OrderId.
func (s *PaymentDetails) GetOrderId() OptString {
	return s.OrderId
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *PaymentDetails) GetPaymentMethod() OptString {
	return s.PaymentMethod
}

// GetStatus returns the value of Status.
func (s *PaymentDetails) GetStatus() OptPaymentDetailsStatus {
	return s.Status
}

// SetPaymentId sets the value of PaymentId.
func (s *PaymentDetails) SetPaymentId(val OptString) {
	s.PaymentId = val
}

// SetOrderId sets the value of OrderId.
func (s *PaymentDetails) SetOrderId(val OptString) {
	s.OrderId = val
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *PaymentDetails) SetPaymentMethod(val OptString) {
	s.PaymentMethod = val
}

// SetStatus sets the value of Status.
func (s *PaymentDetails) SetStatus(val OptPaymentDetailsStatus) {
	s.Status = val
}

// Status of the payment.
type PaymentDetailsStatus string

const (
	PaymentDetailsStatus_0 PaymentDetailsStatus = "Оплачено"
	PaymentDetailsStatus_1 PaymentDetailsStatus = "Ожидает оплаты"
	PaymentDetailsStatus_2 PaymentDetailsStatus = "Отклонено"
)

// AllValues returns all PaymentDetailsStatus values.
func (PaymentDetailsStatus) AllValues() []PaymentDetailsStatus {
	return []PaymentDetailsStatus{
		PaymentDetailsStatus_0,
		PaymentDetailsStatus_1,
		PaymentDetailsStatus_2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentDetailsStatus) MarshalText() ([]byte, error) {
	switch s {
	case PaymentDetailsStatus_0:
		return []byte(s), nil
	case PaymentDetailsStatus_1:
		return []byte(s), nil
	case PaymentDetailsStatus_2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentDetailsStatus) UnmarshalText(data []byte) error {
	switch PaymentDetailsStatus(data) {
	case PaymentDetailsStatus_0:
		*s = PaymentDetailsStatus_0
		return nil
	case PaymentDetailsStatus_1:
		*s = PaymentDetailsStatus_1
		return nil
	case PaymentDetailsStatus_2:
		*s = PaymentDetailsStatus_2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PaymentInitiate
type PaymentInitiate struct {
	OrderId       OptString                       `json:"orderId"`
	PaymentMethod OptPaymentInitiatePaymentMethod `json:"paymentMethod"`
}

// GetOrderId returns the value of OrderId.
func (s *PaymentInitiate) GetOrderId() OptString {
	return s.OrderId
}

// GetPaymentMethod returns the value of PaymentMethod.
func (s *PaymentInitiate) GetPaymentMethod() OptPaymentInitiatePaymentMethod {
	return s.PaymentMethod
}

// SetOrderId sets the value of OrderId.
func (s *PaymentInitiate) SetOrderId(val OptString) {
	s.OrderId = val
}

// SetPaymentMethod sets the value of PaymentMethod.
func (s *PaymentInitiate) SetPaymentMethod(val OptPaymentInitiatePaymentMethod) {
	s.PaymentMethod = val
}

type PaymentInitiatePaymentMethod string

const (
	PaymentInitiatePaymentMethodStripe PaymentInitiatePaymentMethod = "Stripe"
	PaymentInitiatePaymentMethodPayPal PaymentInitiatePaymentMethod = "PayPal"
)

// AllValues returns all PaymentInitiatePaymentMethod values.
func (PaymentInitiatePaymentMethod) AllValues() []PaymentInitiatePaymentMethod {
	return []PaymentInitiatePaymentMethod{
		PaymentInitiatePaymentMethodStripe,
		PaymentInitiatePaymentMethodPayPal,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentInitiatePaymentMethod) MarshalText() ([]byte, error) {
	switch s {
	case PaymentInitiatePaymentMethodStripe:
		return []byte(s), nil
	case PaymentInitiatePaymentMethodPayPal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentInitiatePaymentMethod) UnmarshalText(data []byte) error {
	switch PaymentInitiatePaymentMethod(data) {
	case PaymentInitiatePaymentMethodStripe:
		*s = PaymentInitiatePaymentMethodStripe
		return nil
	case PaymentInitiatePaymentMethodPayPal:
		*s = PaymentInitiatePaymentMethodPayPal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/PaymentResponse
type PaymentResponse struct {
	PaymentId OptString `json:"paymentId"`
	Status    OptString `json:"status"`
}

// GetPaymentId returns the value of PaymentId.
func (s *PaymentResponse) GetPaymentId() OptString {
	return s.PaymentId
}

// GetStatus returns the value of Status.
func (s *PaymentResponse) GetStatus() OptString {
	return s.Status
}

// SetPaymentId sets the value of PaymentId.
func (s *PaymentResponse) SetPaymentId(val OptString) {
	s.PaymentId = val
}

// SetStatus sets the value of Status.
func (s *PaymentResponse) SetStatus(val OptString) {
	s.Status = val
}

func (*PaymentResponse) paymentsPostRes() {}

// PaymentsGetInternalServerError is response for PaymentsGet operation.
type PaymentsGetInternalServerError struct{}

func (*PaymentsGetInternalServerError) paymentsGetRes() {}

type PaymentsGetOKApplicationJSON []PaymentDetails

func (*PaymentsGetOKApplicationJSON) paymentsGetRes() {}

// PaymentsGetUnauthorized is response for PaymentsGet operation.
type PaymentsGetUnauthorized struct{}

func (*PaymentsGetUnauthorized) paymentsGetRes() {}

// PaymentsPostInternalServerError is response for PaymentsPost operation.
type PaymentsPostInternalServerError struct{}

func (*PaymentsPostInternalServerError) paymentsPostRes() {}

// PaymentsPostUnauthorized is response for PaymentsPost operation.
type PaymentsPostUnauthorized struct{}

func (*PaymentsPostUnauthorized) paymentsPostRes() {}

// Ref: #/components/schemas/Product
type Product struct {
	ID          OptString `json:"id"`
	Name        string    `json:"name"`
	Description OptString `json:"description"`
	Price       float64   `json:"price"`
	CategoryId  string    `json:"categoryId"`
	ImageUrl    OptString `json:"imageUrl"`
}

// GetID returns the value of ID.
func (s *Product) GetID() OptString {
	return s.ID
}

// GetName returns the value of Name.
func (s *Product) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Product) GetDescription() OptString {
	return s.Description
}

// GetPrice returns the value of Price.
func (s *Product) GetPrice() float64 {
	return s.Price
}

// GetCategoryId returns the value of CategoryId.
func (s *Product) GetCategoryId() string {
	return s.CategoryId
}

// GetImageUrl returns the value of ImageUrl.
func (s *Product) GetImageUrl() OptString {
	return s.ImageUrl
}

// SetID sets the value of ID.
func (s *Product) SetID(val OptString) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Product) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Product) SetDescription(val OptString) {
	s.Description = val
}

// SetPrice sets the value of Price.
func (s *Product) SetPrice(val float64) {
	s.Price = val
}

// SetCategoryId sets the value of CategoryId.
func (s *Product) SetCategoryId(val string) {
	s.CategoryId = val
}

// SetImageUrl sets the value of ImageUrl.
func (s *Product) SetImageUrl(val OptString) {
	s.ImageUrl = val
}

// Ref: #/components/schemas/ProductCreate
type ProductCreate struct {
	Name        string    `json:"name"`
	Description OptString `json:"description"`
	Price       float64   `json:"price"`
	CategoryId  string    `json:"categoryId"`
	ImageUrl    OptString `json:"imageUrl"`
}

// GetName returns the value of Name.
func (s *ProductCreate) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ProductCreate) GetDescription() OptString {
	return s.Description
}

// GetPrice returns the value of Price.
func (s *ProductCreate) GetPrice() float64 {
	return s.Price
}

// GetCategoryId returns the value of CategoryId.
func (s *ProductCreate) GetCategoryId() string {
	return s.CategoryId
}

// GetImageUrl returns the value of ImageUrl.
func (s *ProductCreate) GetImageUrl() OptString {
	return s.ImageUrl
}

// SetName sets the value of Name.
func (s *ProductCreate) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ProductCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetPrice sets the value of Price.
func (s *ProductCreate) SetPrice(val float64) {
	s.Price = val
}

// SetCategoryId sets the value of CategoryId.
func (s *ProductCreate) SetCategoryId(val string) {
	s.CategoryId = val
}

// SetImageUrl sets the value of ImageUrl.
func (s *ProductCreate) SetImageUrl(val OptString) {
	s.ImageUrl = val
}

// Ref: #/components/schemas/ProductUpdate
type ProductUpdate struct {
	Name        OptString  `json:"name"`
	Description OptString  `json:"description"`
	Price       OptFloat64 `json:"price"`
	CategoryId  OptString  `json:"categoryId"`
	ImageUrl    OptString  `json:"imageUrl"`
}

// GetName returns the value of Name.
func (s *ProductUpdate) GetName() OptString {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *ProductUpdate) GetDescription() OptString {
	return s.Description
}

// GetPrice returns the value of Price.
func (s *ProductUpdate) GetPrice() OptFloat64 {
	return s.Price
}

// GetCategoryId returns the value of CategoryId.
func (s *ProductUpdate) GetCategoryId() OptString {
	return s.CategoryId
}

// GetImageUrl returns the value of ImageUrl.
func (s *ProductUpdate) GetImageUrl() OptString {
	return s.ImageUrl
}

// SetName sets the value of Name.
func (s *ProductUpdate) SetName(val OptString) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *ProductUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetPrice sets the value of Price.
func (s *ProductUpdate) SetPrice(val OptFloat64) {
	s.Price = val
}

// SetCategoryId sets the value of CategoryId.
func (s *ProductUpdate) SetCategoryId(val OptString) {
	s.CategoryId = val
}

// SetImageUrl sets the value of ImageUrl.
func (s *ProductUpdate) SetImageUrl(val OptString) {
	s.ImageUrl = val
}

type ProductsGetSortBy string

const (
	ProductsGetSortByPopularity ProductsGetSortBy = "popularity"
	ProductsGetSortByPrice      ProductsGetSortBy = "price"
)

// AllValues returns all ProductsGetSortBy values.
func (ProductsGetSortBy) AllValues() []ProductsGetSortBy {
	return []ProductsGetSortBy{
		ProductsGetSortByPopularity,
		ProductsGetSortByPrice,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ProductsGetSortBy) MarshalText() ([]byte, error) {
	switch s {
	case ProductsGetSortByPopularity:
		return []byte(s), nil
	case ProductsGetSortByPrice:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ProductsGetSortBy) UnmarshalText(data []byte) error {
	switch ProductsGetSortBy(data) {
	case ProductsGetSortByPopularity:
		*s = ProductsGetSortByPopularity
		return nil
	case ProductsGetSortByPrice:
		*s = ProductsGetSortByPrice
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ProductsPostCreated is response for ProductsPost operation.
type ProductsPostCreated struct{}

// ProductsProductIdDeleteNoContent is response for ProductsProductIdDelete operation.
type ProductsProductIdDeleteNoContent struct{}

// ProductsProductIdImagePostCreated is response for ProductsProductIdImagePost operation.
type ProductsProductIdImagePostCreated struct{}

type ProductsProductIdImagePostReq struct {
	// Product image file to upload.
	File OptMultipartFile `json:"file"`
}

// GetFile returns the value of File.
func (s *ProductsProductIdImagePostReq) GetFile() OptMultipartFile {
	return s.File
}

// SetFile sets the value of File.
func (s *ProductsProductIdImagePostReq) SetFile(val OptMultipartFile) {
	s.File = val
}

// ProductsProductIdPutOK is response for ProductsProductIdPut operation.
type ProductsProductIdPutOK struct{}

// ProductsProductIdReviewsGetInternalServerError is response for ProductsProductIdReviewsGet operation.
type ProductsProductIdReviewsGetInternalServerError struct{}

func (*ProductsProductIdReviewsGetInternalServerError) productsProductIdReviewsGetRes() {}

// ProductsProductIdReviewsGetNotFound is response for ProductsProductIdReviewsGet operation.
type ProductsProductIdReviewsGetNotFound struct{}

func (*ProductsProductIdReviewsGetNotFound) productsProductIdReviewsGetRes() {}

type ProductsProductIdReviewsGetOKApplicationJSON []Review

func (*ProductsProductIdReviewsGetOKApplicationJSON) productsProductIdReviewsGetRes() {}

// ProductsProductIdReviewsPostInternalServerError is response for ProductsProductIdReviewsPost operation.
type ProductsProductIdReviewsPostInternalServerError struct{}

func (*ProductsProductIdReviewsPostInternalServerError) productsProductIdReviewsPostRes() {}

// ProductsProductIdReviewsPostNotFound is response for ProductsProductIdReviewsPost operation.
type ProductsProductIdReviewsPostNotFound struct{}

func (*ProductsProductIdReviewsPostNotFound) productsProductIdReviewsPostRes() {}

// ProductsProductIdReviewsPostUnauthorized is response for ProductsProductIdReviewsPost operation.
type ProductsProductIdReviewsPostUnauthorized struct{}

func (*ProductsProductIdReviewsPostUnauthorized) productsProductIdReviewsPostRes() {}

// Ref: #/components/schemas/Review
type Review struct {
	// ID of the user who wrote the review.
	UserId OptString `json:"userId"`
	// ID of the product being reviewed.
	ProductId OptString `json:"productId"`
	// Rating given to the product.
	Rating OptInt32 `json:"rating"`
	// User's review/comment on the product.
	Comment OptString `json:"comment"`
	// Time when the review was added.
	Timestamp OptDateTime `json:"timestamp"`
}

// GetUserId returns the value of UserId.
func (s *Review) GetUserId() OptString {
	return s.UserId
}

// GetProductId returns the value of ProductId.
func (s *Review) GetProductId() OptString {
	return s.ProductId
}

// GetRating returns the value of Rating.
func (s *Review) GetRating() OptInt32 {
	return s.Rating
}

// GetComment returns the value of Comment.
func (s *Review) GetComment() OptString {
	return s.Comment
}

// GetTimestamp returns the value of Timestamp.
func (s *Review) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// SetUserId sets the value of UserId.
func (s *Review) SetUserId(val OptString) {
	s.UserId = val
}

// SetProductId sets the value of ProductId.
func (s *Review) SetProductId(val OptString) {
	s.ProductId = val
}

// SetRating sets the value of Rating.
func (s *Review) SetRating(val OptInt32) {
	s.Rating = val
}

// SetComment sets the value of Comment.
func (s *Review) SetComment(val OptString) {
	s.Comment = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Review) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

func (*Review) productsProductIdReviewsPostRes() {}

// Ref: #/components/schemas/ReviewInput
type ReviewInput struct {
	// Rating given to the product (1-5).
	Rating OptInt32 `json:"rating"`
	// User's review/comment on the product.
	Comment OptString `json:"comment"`
}

// GetRating returns the value of Rating.
func (s *ReviewInput) GetRating() OptInt32 {
	return s.Rating
}

// GetComment returns the value of Comment.
func (s *ReviewInput) GetComment() OptString {
	return s.Comment
}

// SetRating sets the value of Rating.
func (s *ReviewInput) SetRating(val OptInt32) {
	s.Rating = val
}

// SetComment sets the value of Comment.
func (s *ReviewInput) SetComment(val OptString) {
	s.Comment = val
}

// Ref: #/components/schemas/User
type User struct {
	ID      OptString `json:"id"`
	Email   OptString `json:"email"`
	Name    OptString `json:"name"`
	Phone   OptString `json:"phone"`
	Address OptString `json:"address"`
	City    OptString `json:"city"`
	ZipCode OptString `json:"zipCode"`
}

// GetID returns the value of ID.
func (s *User) GetID() OptString {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() OptString {
	return s.Email
}

// GetName returns the value of Name.
func (s *User) GetName() OptString {
	return s.Name
}

// GetPhone returns the value of Phone.
func (s *User) GetPhone() OptString {
	return s.Phone
}

// GetAddress returns the value of Address.
func (s *User) GetAddress() OptString {
	return s.Address
}

// GetCity returns the value of City.
func (s *User) GetCity() OptString {
	return s.City
}

// GetZipCode returns the value of ZipCode.
func (s *User) GetZipCode() OptString {
	return s.ZipCode
}

// SetID sets the value of ID.
func (s *User) SetID(val OptString) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val OptString) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *User) SetName(val OptString) {
	s.Name = val
}

// SetPhone sets the value of Phone.
func (s *User) SetPhone(val OptString) {
	s.Phone = val
}

// SetAddress sets the value of Address.
func (s *User) SetAddress(val OptString) {
	s.Address = val
}

// SetCity sets the value of City.
func (s *User) SetCity(val OptString) {
	s.City = val
}

// SetZipCode sets the value of ZipCode.
func (s *User) SetZipCode(val OptString) {
	s.ZipCode = val
}

func (*User) usersProfileGetRes() {}

// Ref: #/components/schemas/UserRegistration
type UserRegistration struct {
	Email    OptString `json:"email"`
	Password OptString `json:"password"`
	Name     OptString `json:"name"`
	Phone    OptString `json:"phone"`
	Address  OptString `json:"address"`
	City     OptString `json:"city"`
	ZipCode  OptString `json:"zipCode"`
}

// GetEmail returns the value of Email.
func (s *UserRegistration) GetEmail() OptString {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *UserRegistration) GetPassword() OptString {
	return s.Password
}

// GetName returns the value of Name.
func (s *UserRegistration) GetName() OptString {
	return s.Name
}

// GetPhone returns the value of Phone.
func (s *UserRegistration) GetPhone() OptString {
	return s.Phone
}

// GetAddress returns the value of Address.
func (s *UserRegistration) GetAddress() OptString {
	return s.Address
}

// GetCity returns the value of City.
func (s *UserRegistration) GetCity() OptString {
	return s.City
}

// GetZipCode returns the value of ZipCode.
func (s *UserRegistration) GetZipCode() OptString {
	return s.ZipCode
}

// SetEmail sets the value of Email.
func (s *UserRegistration) SetEmail(val OptString) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *UserRegistration) SetPassword(val OptString) {
	s.Password = val
}

// SetName sets the value of Name.
func (s *UserRegistration) SetName(val OptString) {
	s.Name = val
}

// SetPhone sets the value of Phone.
func (s *UserRegistration) SetPhone(val OptString) {
	s.Phone = val
}

// SetAddress sets the value of Address.
func (s *UserRegistration) SetAddress(val OptString) {
	s.Address = val
}

// SetCity sets the value of City.
func (s *UserRegistration) SetCity(val OptString) {
	s.City = val
}

// SetZipCode sets the value of ZipCode.
func (s *UserRegistration) SetZipCode(val OptString) {
	s.ZipCode = val
}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	Email   OptString `json:"email"`
	Name    OptString `json:"name"`
	Phone   OptString `json:"phone"`
	Address OptString `json:"address"`
	City    OptString `json:"city"`
	ZipCode OptString `json:"zipCode"`
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() OptString {
	return s.Email
}

// GetName returns the value of Name.
func (s *UserUpdate) GetName() OptString {
	return s.Name
}

// GetPhone returns the value of Phone.
func (s *UserUpdate) GetPhone() OptString {
	return s.Phone
}

// GetAddress returns the value of Address.
func (s *UserUpdate) GetAddress() OptString {
	return s.Address
}

// GetCity returns the value of City.
func (s *UserUpdate) GetCity() OptString {
	return s.City
}

// GetZipCode returns the value of ZipCode.
func (s *UserUpdate) GetZipCode() OptString {
	return s.ZipCode
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val OptString) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *UserUpdate) SetName(val OptString) {
	s.Name = val
}

// SetPhone sets the value of Phone.
func (s *UserUpdate) SetPhone(val OptString) {
	s.Phone = val
}

// SetAddress sets the value of Address.
func (s *UserUpdate) SetAddress(val OptString) {
	s.Address = val
}

// SetCity sets the value of City.
func (s *UserUpdate) SetCity(val OptString) {
	s.City = val
}

// SetZipCode sets the value of ZipCode.
func (s *UserUpdate) SetZipCode(val OptString) {
	s.ZipCode = val
}

// UsersChangePasswordPostOK is response for UsersChangePasswordPost operation.
type UsersChangePasswordPostOK struct{}

type UsersChangePasswordPostReq struct {
	CurrentPassword OptString `json:"currentPassword"`
	NewPassword     OptString `json:"newPassword"`
}

// GetCurrentPassword returns the value of CurrentPassword.
func (s *UsersChangePasswordPostReq) GetCurrentPassword() OptString {
	return s.CurrentPassword
}

// GetNewPassword returns the value of NewPassword.
func (s *UsersChangePasswordPostReq) GetNewPassword() OptString {
	return s.NewPassword
}

// SetCurrentPassword sets the value of CurrentPassword.
func (s *UsersChangePasswordPostReq) SetCurrentPassword(val OptString) {
	s.CurrentPassword = val
}

// SetNewPassword sets the value of NewPassword.
func (s *UsersChangePasswordPostReq) SetNewPassword(val OptString) {
	s.NewPassword = val
}

// UsersConfirmEmailPostOK is response for UsersConfirmEmailPost operation.
type UsersConfirmEmailPostOK struct{}

type UsersConfirmEmailPostReq struct {
	ConfirmationToken OptString `json:"confirmationToken"`
}

// GetConfirmationToken returns the value of ConfirmationToken.
func (s *UsersConfirmEmailPostReq) GetConfirmationToken() OptString {
	return s.ConfirmationToken
}

// SetConfirmationToken sets the value of ConfirmationToken.
func (s *UsersConfirmEmailPostReq) SetConfirmationToken(val OptString) {
	s.ConfirmationToken = val
}

// UsersForgotPasswordPostOK is response for UsersForgotPasswordPost operation.
type UsersForgotPasswordPostOK struct{}

type UsersForgotPasswordPostReq struct {
	Email OptString `json:"email"`
}

// GetEmail returns the value of Email.
func (s *UsersForgotPasswordPostReq) GetEmail() OptString {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *UsersForgotPasswordPostReq) SetEmail(val OptString) {
	s.Email = val
}

type UsersLoginGoogleCallbackGetOK struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *UsersLoginGoogleCallbackGetOK) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *UsersLoginGoogleCallbackGetOK) SetToken(val OptString) {
	s.Token = val
}

// UsersLoginGoogleGetFound is response for UsersLoginGoogleGet operation.
type UsersLoginGoogleGetFound struct{}

type UsersLoginPostOK struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *UsersLoginPostOK) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *UsersLoginPostOK) SetToken(val OptString) {
	s.Token = val
}

type UsersLoginPostReq struct {
	Email    OptString `json:"email"`
	Password OptString `json:"password"`
}

// GetEmail returns the value of Email.
func (s *UsersLoginPostReq) GetEmail() OptString {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *UsersLoginPostReq) GetPassword() OptString {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *UsersLoginPostReq) SetEmail(val OptString) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *UsersLoginPostReq) SetPassword(val OptString) {
	s.Password = val
}

// UsersProfileGetInternalServerError is response for UsersProfileGet operation.
type UsersProfileGetInternalServerError struct{}

func (*UsersProfileGetInternalServerError) usersProfileGetRes() {}

// UsersProfileGetNotFound is response for UsersProfileGet operation.
type UsersProfileGetNotFound struct{}

func (*UsersProfileGetNotFound) usersProfileGetRes() {}

// UsersProfileGetUnauthorized is response for UsersProfileGet operation.
type UsersProfileGetUnauthorized struct{}

func (*UsersProfileGetUnauthorized) usersProfileGetRes() {}

// UsersProfilePutBadRequest is response for UsersProfilePut operation.
type UsersProfilePutBadRequest struct{}

func (*UsersProfilePutBadRequest) usersProfilePutRes() {}

// UsersProfilePutInternalServerError is response for UsersProfilePut operation.
type UsersProfilePutInternalServerError struct{}

func (*UsersProfilePutInternalServerError) usersProfilePutRes() {}

// UsersProfilePutOK is response for UsersProfilePut operation.
type UsersProfilePutOK struct{}

func (*UsersProfilePutOK) usersProfilePutRes() {}

// UsersProfilePutUnauthorized is response for UsersProfilePut operation.
type UsersProfilePutUnauthorized struct{}

func (*UsersProfilePutUnauthorized) usersProfilePutRes() {}

// UsersRegisterPostBadRequest is response for UsersRegisterPost operation.
type UsersRegisterPostBadRequest struct{}

func (*UsersRegisterPostBadRequest) usersRegisterPostRes() {}

type UsersRegisterPostCreated struct {
	Token OptString `json:"token"`
}

// GetToken returns the value of Token.
func (s *UsersRegisterPostCreated) GetToken() OptString {
	return s.Token
}

// SetToken sets the value of Token.
func (s *UsersRegisterPostCreated) SetToken(val OptString) {
	s.Token = val
}

func (*UsersRegisterPostCreated) usersRegisterPostRes() {}

// UsersRegisterPostInternalServerError is response for UsersRegisterPost operation.
type UsersRegisterPostInternalServerError struct{}

func (*UsersRegisterPostInternalServerError) usersRegisterPostRes() {}

// UsersResetPasswordPostOK is response for UsersResetPasswordPost operation.
type UsersResetPasswordPostOK struct{}

type UsersResetPasswordPostReq struct {
	ResetToken  OptString `json:"resetToken"`
	NewPassword OptString `json:"newPassword"`
}

// GetResetToken returns the value of ResetToken.
func (s *UsersResetPasswordPostReq) GetResetToken() OptString {
	return s.ResetToken
}

// GetNewPassword returns the value of NewPassword.
func (s *UsersResetPasswordPostReq) GetNewPassword() OptString {
	return s.NewPassword
}

// SetResetToken sets the value of ResetToken.
func (s *UsersResetPasswordPostReq) SetResetToken(val OptString) {
	s.ResetToken = val
}

// SetNewPassword sets the value of NewPassword.
func (s *UsersResetPasswordPostReq) SetNewPassword(val OptString) {
	s.NewPassword = val
}
